{"changed":false,"filter":false,"title":"simon.js","tooltip":"/assets/js/simon.js","value":"var turn = 0; // keeps track of the current turn\nvar sequenceIndex = 0; // keeps track of the animation sequence\nvar gameSequence = []; // stores the games sequence\nvar playerSequence = []; // stores the players sequence\nvar playerIndex = 0; // keeps track of the players current position in the sequnce\nvar active = false; // whether or not the buttons are activated\nvar strict = false;\nvar start = false;\n\nconst redAudio = document.getElementById(\"red-audio\"); // game sounds\nconst greenAudio = document.getElementById(\"green-audio\");\nconst blueAudio = document.getElementById(\"blue-audio\");\nconst yellowAudio = document.getElementById(\"yellow-audio\");\nconst gameOver = document.getElementById(\"game-over\");\n\n// function to prefill the sequence of numbers\n\nfunction fillArray() {\n    for (var i = 0; i < 5; i++) {\n        gameSequence.push(Math.floor((Math.random() * 4) + 1));\n    }\n    console.log(gameSequence);\n}\n\n// animation and sound functions for each button\n\nfunction playRed() {\n    redAudio.play();\n    $(\"#red\").addClass(\"highlight-red\");\n\n    setTimeout(function() {\n        $(\"#red\").removeClass(\"highlight-red\")\n    }, 500);\n}\n\nfunction playGreen() {\n    greenAudio.play();\n    $(\"#green\").addClass(\"highlight-green\");\n\n    setTimeout(function() {\n        $(\"#green\").removeClass(\"highlight-green\")\n    }, 500);\n}\n\nfunction playBlue() {\n    blueAudio.play();\n    $(\"#blue\").addClass(\"highlight-blue\");\n\n    setTimeout(function() {\n        $(\"#blue\").removeClass(\"highlight-blue\")\n    }, 500);\n}\n\nfunction playYellow() {\n    yellowAudio.play();\n    $(\"#yellow\").addClass(\"highlight-yellow\");\n\n    setTimeout(function() {\n        $(\"#yellow\").removeClass(\"highlight-yellow\")\n    }, 500);\n}\n\n// making sure the page has fully loaded before associating the buttons to functions.\n\n$(document).ready(function() {\n\n    $(\"#start-btn\").click(function() {\n\n        if (start === false) {          // The start button will also act as a rest button.\n            start = true;\n            turn = 0;\n            gameSequence = [];\n            sequenceIndex = 0;\n            fillArray();\n            playSequence();\n            console.log(\"strict is \" + strict);\n            console.log(\"start is \" + start);\n\n            $(\"#counter\").text(0);\n            $(this).addClass(\"highlight-red\");\n            $(\"#counter-display\").addClass(\"highlight-red\");\n        }\n        else {\n            resetGame();\n        }\n    });\n\n    $(\"#strict-btn\").click(function() {\n\n        if (start === false) { // Changing strict mode should only be available if the game has not yet been started.\n\n            if (strict === true) {\n                strict = false;\n                console.log(\"strict is \" + strict);\n                $(this).removeClass(\"highlight-yellow\");\n            }\n            else {\n                $(this).addClass(\"highlight-yellow\");\n                strict = true;\n                console.log(\"strict is \" + strict);\n            }\n        }\n    });\n\n    $(\".col-button\").click(function() {\n\n        button = $(this).attr(\"id\");\n\n        if (button == \"red\" && active == true) {\n            playRed();\n            playerSequence.push(1);\n            checkPlayerTurn();\n            console.log(playerSequence);\n        }\n\n        if (button == \"green\" && active == true) {\n            playGreen();\n            playerSequence.push(2);\n            checkPlayerTurn();\n            console.log(playerSequence);\n        }\n\n        if (button == \"blue\" && active == true) {\n            playBlue();\n            playerSequence.push(3);\n            checkPlayerTurn();\n            console.log(playerSequence);\n        }\n\n        if (button == \"yellow\" && active == true) {\n            playYellow();\n            playerSequence.push(4);\n            checkPlayerTurn();\n            console.log(playerSequence);\n        }\n    });\n});\n\n\nfunction playSequence() {\n    sequenceIndex = 0;\n    playerIndex = 0;\n    playerSequence = [];\n    /* turn++; */\n    console.log(\"The turn is \" + turn);\n    active = false;\n\n    var animateInterval = setInterval(function() {\n\n        if (sequenceIndex === turn) {\n            active = true;\n            clearInterval(animateInterval);\n            console.log(\"active is \" + active);\n        }\n        if (gameSequence[sequenceIndex] === 1) {\n            playRed();\n        }\n        if (gameSequence[sequenceIndex] === 2) {\n            playGreen();\n        }\n        if (gameSequence[sequenceIndex] === 3) {\n            playBlue();\n        }\n        if (gameSequence[sequenceIndex] === 4) {\n            playYellow();\n        }\n        sequenceIndex++;\n        console.log(\"sequenceIndex is \" + sequenceIndex);\n\n    }, 800);\n}\n\n\nfunction checkPlayerTurn() {\n\n    if (gameSequence[playerIndex] === playerSequence[playerIndex]) {\n\n        playerIndex++;\n\n        if (playerSequence.length === turn + 1) {\n            active = false;\n            turn++;\n            $(\"#counter\").text(turn);\n            setTimeout(playSequence, 1000);\n\n            if (playerSequence.length === gameSequence.length) {\n                alert(\"You win!\");\n                resetGame();\n            }\n        }\n    }\n    else if (strict == true) {\n\n        active = false;\n        gameOver.play();\n    }\n    else {\n\n        alert(\"Wrong move! Try again.\");\n        active = false;\n        setTimeout(playSequence, 1000);\n    }\n}\n\nfunction resetGame() {\n    turn = 0;\n    sequenceIndex = 0;\n    gameSequence = [];\n    playerSequence = [];\n    playerIndex = 0;\n    active = false;\n    strict = false;\n    start = false;\n\n    $(\"#counter\").text(\"--\");\n    $(\"#start-btn\").removeClass(\"highlight-red\");\n    $(\"#counter-display\").removeClass(\"highlight-red\");\n    $(\"#strict-btn\").removeClass(\"highlight-yellow\");\n}\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":3570.328125,"scrollleft":0,"selection":{"start":{"row":68,"column":91},"end":{"row":68,"column":91},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":201,"state":"no_regex","mode":"ace/mode/javascript"}},"timestamp":1567020330577}